library(Hmisc)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
path_data <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/2a_Esercitazione - Modelli Generalizzati/R 01 - Modelli Generalizzati/Esercizio 6/QUAKES.TXT"
df <- read.table(path_data, sep=" ", header=TRUE)
head(df)
str(df)
var_numeric <- c("lat", "long", "depth", "mag", "stations")
var_numeric <- c("lat", "long", "depth", "mag")
mod1 <- lm(mag ~ stations + depth + long + lat , df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
par(mfrow=c(1,1))
#-- R CODE
white.test(mod1,df)
dwtest(mod1) #-- Durbin-Whatson test
# Le 4 variabili esplicative "stations", "depth", "long", "lat" risultano tutte significative. Il valore dell'R2 ?
# molto buono e il modello interpreta bene la variabile dipendente.
# Si verifica ora la multicollinearit? delle variabili esplicative.
# Per tutti e 4 i valori l'indice di tolleranza ? quasi prossimo a uno e quindi mostra che non esiste collinearit?.
# Il condition index perfeziona tale conclusione perch? se risulta debolmente dipendente per il quarto auto valore
# mentre il quinto assume valore molto elevato andando a spiegare quota di varianza elevata per l'intercetta e
# la variabile "long".
ols_eigen_cindex(mod1)
ols_vif_tol(mod1)
shapiro.test(resid(mod1))
ks.test(resid(mod1),"pnorm")
mod2 <- lm(resid(mod1)^2 ~ stations + depth + long + lat, df) #-- stima modello lineare semplice
summary(mod2)
anova(mod2)
var(fitted(mod2))
sd(fitted(mod2))
white.test(mod2)
dwtest(mod2)
white.test(mod2, df)
sd_error <- sqrt(fitted(mod2))
mod3 <- lm( I(mark_val/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
mod3 <- lm( I(mag/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
summary(mod3)
anova(mod3)
white.test(mod3)
dwtest(mod3)
white.test(mod3, df)
dwtest(mod3)
# PROVO ORA WLS
weight <- 1/fitted(mod2)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod4)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)])
# FGLS
mod2 <- lm(log(resid(mod1)^2) ~ stations + depth + long + lat, DF)
# FGLS
mod2 <- lm(log(resid(mod1)^2) ~ stations + depth + long + lat, df)
sd_error <- sqrt(exp(fitted(mod2)))
mod5 <- lm( I(mag/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
summary(mod5)
anova(mod5)
#-- R CODE
white.test(mod5)
#-- R CODE
white.test(mod5, df)
dwtest(mod5)
bptest(mod5)
df <- read.table(path_data, sep=" ", header=TRUE)
head(df)
str(df)
var_numeric <- c("lat", "long", "depth", "mag")
mod1 <- lm(mag ~ stations + depth + long + lat , df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
par(mfrow=c(1,1))
#-- R CODE
white.test(mod1,df)
dwtest(mod1) #-- Durbin-Whatson test
# Le 4 variabili esplicative "stations", "depth", "long", "lat" risultano tutte significative. Il valore dell'R2 ?
# molto buono e il modello interpreta bene la variabile dipendente.
# Si verifica ora la multicollinearit? delle variabili esplicative.
# Per tutti e 4 i valori l'indice di tolleranza ? quasi prossimo a uno e quindi mostra che non esiste collinearit?.
# Il condition index perfeziona tale conclusione perch? se risulta debolmente dipendente per il quarto auto valore
# mentre il quinto assume valore molto elevato andando a spiegare quota di varianza elevata per l'intercetta e
# la variabile "long".
ols_eigen_cindex(mod1)
ols_vif_tol(mod1)
shapiro.test(resid(mod1))
ks.test(resid(mod1),"pnorm")
mod2 <- lm(resid(mod1)^2 ~ stations + depth + long + lat, df) #-- stima modello lineare semplice
summary(mod2)
anova(mod2)
var(fitted(mod2))
sd(fitted(mod2))
white.test(mod2, df)
dwtest(mod2)
# OLS-WLS-FGLS
# OLS
sd_error <- sqrt(fitted(mod2))
mod3 <- lm( I(mag/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
summary(mod3)
anova(mod3)
white.test(mod3, df)
dwtest(mod3)
source('~/.active-rstudio-document')
# prova
mod6 <- lm(mag ~ stations + depth + long + lat , df, weights = 1/sd_error) #-- stima modello lineare semplice
dwtest(mod6)
white.test(mod6, df )
library(Hmisc)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
path_data <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/2a_Esercitazione - Modelli Generalizzati/R 01 - Modelli Generalizzati/Esercizio 6/QUAKES.TXT"
df <- read.table(path_data, sep=" ", header=TRUE)
head(df)
str(df)
var_numeric <- c("lat", "long", "depth", "mag")
mod1 <- lm(mag ~ stations + depth + long + lat , df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
par(mfrow=c(1,1))
#-- R CODE
white.test(mod1,df)
dwtest(mod1)
ols_eigen_cindex(mod1)
ols_vif_tol(mod1)
shapiro.test(resid(mod1))
ks.test(resid(mod1),"pnorm")
mod2 <- lm(resid(mod1)^2 ~ stations + depth + long + lat, df) #-- stima modello lineare semplice
summary(mod2)
anova(mod2)
var(fitted(mod2))
sd(fitted(mod2))
white.test(mod2, df)
dwtest(mod2)
# OLS-WLS-FGLS
# OLS
sd_error <- sqrt(fitted(mod2))
sd_error
mod3 <- lm( I(mag/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
summary(mod3)
anova(mod3)
white.test(mod3, df)
dwtest(mod3)
# PROVO ORA WLS
weight <- 1/fitted(mod2)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod4)
anova(mod4)
white.test(mod4, df)
dwtest(mod4)
# PROVO ORA WLS
weight <- 1/fitted(mod2)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)])
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)], na.action = na.exclude)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)],df)
# PROVO ORA WLS
weight <- 1/fitted(mod2)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)],df)
mod4 <- lm(mag ~ stations + depth + long + lat, df[-which(weight<0),],weights = weight[-which(weight<0)], df)
summary(mod4)
# FGLS
mod2 <- lm(log(resid(mod1)^2) ~ stations + depth + long + lat, df)
sd_error <- sqrt(exp(fitted(mod2)))
mod5 <- lm( I(mag/sd_error) ~ 0 + I(1/sd_error) + I(stations/sd_error) + I(depth/sd_error) + I(long/sd_error) + I(lat/sd_error), df)
summary(mod5)
anova(mod5)
#-- R CODE
white.test(mod5, df)
dwtest(mod5)
mod2 <- lm(resid(mod1)^2 ~ stations + depth + long + lat, df) #-- stima modello lineare semplice
#-- R CODE
white.test(mod1,df)
