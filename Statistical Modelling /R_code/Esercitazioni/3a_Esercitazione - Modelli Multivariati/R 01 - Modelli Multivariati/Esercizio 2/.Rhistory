dwtest(mod3)
#
# Tuttavia si vede che il modello non usa tutte le osservazioni perch? alcune delle stime delle suddette osservazioni
# hanno varianze negative per limiti computazionali del programma FGLS. Si propone quindi una nuova stima
# del modello basata su esponenziale FGLS che per propriet? della funzione esponenziale non pu? avere stime
# con varianze negative.
mod2 <- lm(log(resid(mod1)^2) ~ assets + sales + profits + cash + employ, d)
sd_error <- sqrt(exp(fitted(mod2)))
mod5 <- lm(I(mark_val/sd_error) ~ 0 + I(1/sd_error) + I(assets/sd_error) + I(sales/sd_error) + I(profits/sd_error) + I(cash/sd_error) + I(employ/sd_error), d)
summary(mod5)
anova(mod5)
#-- R CODE
white.test(mod5)
dwtest(mod5)
# ll modello ora usa tutte le osservazioni, migliora il fitting e si conferma come unica variabile con parametro significativo "cash".
library(car)
library(sjstats)
library(plotrix)
library(sjPlot)
library(sjmisc)
library(lme4)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(ppcor)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
data_path <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/3a_Esercitazione - Modelli Multivariati/R 01 - Modelli Multivariati/Esercizio 2/vitamina.txt"
df <- read.table(data_path, header = TRUE, sep=" ")
head(df)
str(df)
VAR_NUMERIC <- c("bmr","E_bmr","wt","ht","Cvit", "age")
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
VAR_NUMERIC <- c("bmr","E_bmr","wt","ht","Cvit")
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
plot(df[,VAR_NUMERIC], cex=0.5, pch=17)
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, pch=17, col="lightgreen")
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(df[,i], main=i, pch=17, col="lightgreen", freq = F, xlab=i)
}
mod1 <- lm(bmr ~ wt + ht + Cvit + age, df)
summary(mod1)
anova(mod1)
# ETEROSCHEDASTICITA' DA SISTEMARE
white.test(mod1, df)
# INCORRELATI GLI ERRORI
dwtest(mod1)
# MULTICOLLINEARITA'
# VIF + TOL A POSTO
ols_vif_tol(mod1)
# CINDEX A POSTO
ols_eigen_cindex(mod1)
mod1 <- lm(bmr ~ wt + ht + Cvit, df)
summary(mod1)
anova(mod1)
# ETEROSCHEDASTICITA' DA SISTEMARE
white.test(mod1, df)
# INCORRELATI GLI ERRORI
dwtest(mod1)
# MULTICOLLINEARITA'
# VIF + TOL A POSTO
ols_vif_tol(mod1)
# CINDEX A POSTO
ols_eigen_cindex(mod1)
# ENTRAMBI
ols_coll_diag(mod1)
shapiro.test(resid(mod1))
ks.test(resid(mod1),"pnorm")
# DISEGNI
par(mfrow=c(1,1))
plot(mod1,which=1,pch=19)
plot(mod1,which=2,pch=19)
plot(mod1,which=2,pch=19)
plot(mod1,which=3,pch=19)
plot(mod1,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod1,which=5,pch=19)
plot(mod1,which=2,pch=19)
plot(mod1,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod1,which=5,pch=19)
plot(mod1,which=6,pch=19)
plot(mod1,which=3,pch=19)
plot(mod1,which=4,pch=19)
plot(mod1,which=2,pch=19)
plot(fitted(mod1),rstudent(mod1),pch=19,xlab="Predicted",ylab="Student - Residual")
abline(h=-2,col=2,lty=2,lwd=2)
abline(h=2,col=2,lty=2,lwd=2)
plot(hatvalues(mod1),rstudent(mod1),pch=19,xlab="Leverage",ylab="Student - Residual")
abline(v=0.04,col=2,lty=2,lwd=2)
plot(mod1,which=6,pch=19)
df[2042,VAR_NUMERIC]
df[1749, VAR_NUMERIC]
df[2198, VAR_NUMERIC]
# TOLGO OUTLIER SU WT
df$ESTREME <- 1 #-- inserisco una nuova colonna del dataset con obs. estreme
df$ESTREME[c(FIND_EXTREME_OBSERVARION(df$wt,2),(FIND_EXTREME_OBSERVARION(df$Cvit,2))] <- 2
df$ESTREME[c(FIND_EXTREME_OBSERVARION(df$wt,2),(FIND_EXTREME_OBSERVARION(df$Cvit,2))] <- 2
df$ESTREME[c(FIND_EXTREME_OBSERVARION(df$wt,2),FIND_EXTREME_OBSERVARION(df$Cvit,2))] <- 2
df$ESTREME
d_noaut <- df[-c(FIND_EXTREME_OBSERVARION(df$wt,2)),]
summary(d_noaut[,VAR_NUMERIC])
cor(d_noaut[,VAR_NUMERIC])
plot(d_noaut[,VAR_NUMERIC], cex=0.5, pch=17)
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d_noaut[,i], main=i, pch=17, col="lightgreen")
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(d_noaut[,i], main=i, pch=17, col="lightgreen", freq = F, xlab=i)
}
mod2 <- lm(bmr ~ wt + ht + Cvit, d_noaut)
summary(mod2)
anova(mod2)
# ETEROSCHEDASTICITA' DA SISTEMARE
white.test(mod2, d_noaut)
# INCORRELATI GLI ERRORI
dwtest(mod2)
# MULTICOLLINEARITA'
# VIF + TOL A POSTO
ols_vif_tol(mod2)
# CINDEX A POSTO
ols_eigen_cindex(mod2)
# ENTRAMBI
ols_coll_diag(mod2)
shapiro.test(resid(mod2))
ks.test(resid(mod2),"pnorm")
# DISEGNI
par(mfrow=c(1,1))
plot(mod2,which=1,pch=19)
plot(mod2,which=2,pch=19)
plot(mod2,which=3,pch=19)
plot(mod2,which=4,pch=19)
abline(h=2*4/nrow(d_noaut),col=2,lwd=3,lty=2)
plot(mod2,which=5,pch=19)
mod3 <- lm(resid(mod2)^2 ~ wt + ht + Cvit + age, d_noaut) #-- stima modello lineare semplice
mod3 <- lm(resid(mod2)^2 ~ wt + ht + Cvit, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
dwtest(mod3)
var(fitted(mod3))
sd(fitted(mod3))
#################################
#   OLS
#################################
sd_error <- sqrt(fitted(mod3))
mod4 <- lm( I(bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod4)
anova(mod4)
white.test(mod4, d_noaut)
dwtest(mod4)
weight <- 1/fitted(mod3)
mod5 <- lm(bmr ~ wt + ht + Cvit + age, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod5
weight <- 1/fitted(mod3)
mod5 <- lm(bmr ~ wt + ht + Cvit, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod3 <- lm(log(resid(mod2)^2) ~ wt + ht + Cvit + age, d_noaut)
mod3 <- lm(log(resid(mod2)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
mod3 <- lm(resid(mod2)^2 ~ wt + ht + Cvit, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
dwtest(mod6)
mod7 <- lm(log(bmr) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
anova(mod7)
white.test(mod7, d_noaut)
dwtest(mod7)
mod7 <- lm(I(log(bmr)) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
anova(mod7)
white.test(mod7, d_noaut)
dwtest(mod7)
#################################
#   LIN - LOG
#################################
mod8 <- lm(bmr ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod7)
summary(mod8)
anova(mod8)
white.test(mod7, d_noaut)
white.test(mod8, d_noaut)
dwtest(mod8)
#################################
#   LOG - LOG
#################################
mod8 <- lm(I(log(bmr)) ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod8)
anova(mod8)
white.test(mod8, d_noaut)
dwtest(mod8)
mod2 <- lm(bmr ~ wt + ht + Cvit, d_noaut)
summary(mod2)
mod7 <- lm(I(log(bmr)) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
#################################
#   LIN - LOG
#################################
mod8 <- lm(bmr ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod8)
#################################
#   LOG - LOG
#################################
mod9 <- lm(I(log(bmr)) ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod9)
mod7 <- lm(I(log(bmr)) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
mod3 <- lm(resid(mod9)^2 ~ wt + ht + Cvit, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
dwtest(mod3)
var(fitted(mod3))
sd(fitted(mod3))
sd_error <- sqrt(fitted(mod3))
mod4 <- lm( I(bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod4)
anova(mod4)
white.test(mod4, d_noaut)
dwtest(mod4)
weight <- 1/fitted(mod3)
mod5 <- lm(bmr ~ wt + ht + Cvit, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod3 <- lm(log(resid(mod2)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
mod3 <- lm(resid(mod9)^2 ~ wt + ht + Cvit, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
sd_error <- sqrt(fitted(mod3))
mod4 <- lm( I(bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod4)
anova(mod4)
white.test(mod4, d_noaut)
weight <- 1/fitted(mod3)
mod5 <- lm(bmr ~ wt + ht + Cvit, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod5
#################################
#   SECONDA REGRESSIONE D_NOAUT
#################################
df
mod2 <- lm(E_bmr ~ wt + ht + Cvit, d_noaut)
summary(mod2)
anova(mod2)
# ETEROSCHEDASTICITA' DA SISTEMARE
white.test(mod2, d_noaut)
# INCORRELATI GLI ERRORI
dwtest(mod2)
# MULTICOLLINEARITA'
# VIF + TOL A POSTO
ols_vif_tol(mod2)
# CINDEX A POSTO
ols_eigen_cindex(mod2)
shapiro.test(resid(mod2))
ks.test(resid(mod2),"pnorm")
# DISEGNI
par(mfrow=c(1,1))
plot(mod2,which=1,pch=19)
plot(mod2,which=2,pch=19)
plot(mod2,which=3,pch=19)
plot(mod2,which=4,pch=19)
abline(h=2*4/nrow(d_noaut),col=2,lwd=3,lty=2)
plot(mod2,which=5,pch=19)
mod7 <- lm(I(log(bmr)) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
mod7 <- lm(I(log(E_bmr)) ~ wt + ht + Cvit, d_noaut)
summary(mod7)
anova(mod7)
white.test(mod7, d_noaut)
dwtest(mod7)
#################################
#   LIN - LOG
#################################
mod8 <- lm(bmr ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
#################################
#   LIN - LOG
#################################
mod8 <- lm(E_bmr ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod8)
anova(mod8)
white.test(mod8, d_noaut)
dwtest(mod8)
#################################
#   LOG - LOG
#################################
mod9 <- lm(I(log(bmr)) ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
#################################
#   LOG - LOG
#################################
mod9 <- lm(I(log(E_bmr)) ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod9)
anova(mod9)
white.test(mod9, d_noaut)
dwtest(mod9)
#################################
#   LIN - LOG
#################################
mod8 <- lm(E_bmr ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod8)
anova(mod8)
white.test(mod8, d_noaut)
dwtest(mod8)
#################################
#   LOG - LOG
#################################
mod9 <- lm(I(log(E_bmr)) ~ I(log(wt)) + I(log(ht)) + I(log(Cvit)), d_noaut)
summary(mod9)
anova(mod9)
white.test(mod9, d_noaut)
dwtest(mod9)
#################################
#   SISTEMO ETEROSCHEDASTICITA'
#################################
mod3 <- lm(resid(mod9)^2 ~ wt + ht + Cvit, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
dwtest(mod3)
var(fitted(mod3))
sd(fitted(mod3))
sd_error <- sqrt(fitted(mod3))
mod4 <- lm( I(E_bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod4)
anova(mod4)
white.test(mod4, d_noaut)
dwtest(mod4)
weight <- 1/fitted(mod3)
mod5 <- lm(bmr ~ wt + ht + Cvit, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod5
mod3 <- lm(log(resid(mod2)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(E_bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
mod3 <- lm(log(resid(mod9)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(E_bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
mod3 <- lm(log(resid(mod2)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(E_bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
mod3 <- lm(log(resid(mod9)^2) ~ wt + ht + Cvit, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(E_bmr/sd_error) ~ 0 + I(1/sd_error) + I(wt/sd_error) + I(ht/sd_error) + I(Cvit/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
library(olsrr)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
path <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/1a_Esercitazione - Modello Lineare/R/Esercizio 6/cpus.txt"
df <- read.table(path, sep=" ", header=TRUE)
head(df)
str(df)
VAR_NUMERIC <- names(df)[3:ncol(df)]
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
plot(df[,VAR_NUMERIC], cex=0.5, pch=17)
par(mfrow=c(3,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(4,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,4))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,4))
for(i in VAR_NUMERIC){
hist(df[,i], main=i, col="lightgreen", freq=F, xlab=i)
}
VAR_NUMERIC
str(df)
summary(df[,VAR_NUMERIC])
# COME ELIMINARE OUTLIER
df$ESTREME <- 1 #-- inserisco una nuova colonna del dataset con obs. estreme
df$ESTREME[c(FIND_EXTREME_OBSERVARION(df$syct,2),FIND_EXTREME_OBSERVARION(df$chmin,2),FIND_EXTREME_OBSERVARION(df$cach,2),FIND_EXTREME_OBSERVARION(df$chmax,2),FIND_EXTREME_OBSERVARION(df$chmin,2),FIND_EXTREME_OBSERVARION(df$perf,2))] <- 2
df$ESTREME
d_noaut <- df[-c(FIND_EXTREME_OBSERVARION(df$syct,2),FIND_EXTREME_OBSERVARION(df$chmin,2),FIND_EXTREME_OBSERVARION(df$cach,2),FIND_EXTREME_OBSERVARION(df$chmax,2),FIND_EXTREME_OBSERVARION(df$chmin,2),FIND_EXTREME_OBSERVARION(df$perf,2)),]
head(d_noaut)
str(d_noaut)
par(mfrow=c(2,4))
for(i in VAR_NUMERIC){
boxplot(d_noaut[,i], main=i, col="lightgreen")
}
#   REGRESSIONE
#################################
mod1 <- lm(perf ~ syct + mmin + mmax + cach + chmin + chmax + estperf, d_noaut)
summary(mod1)
anova(mod1)
white.test(mod1, d_noaut) #-- White test (per dettagli ?bptest)
dwtest(mod1)
# MULTI COLLINEARITA'
ols_coll_diag(mod1)
mod2 <- lm(perf ~ syct + mmin+ cach + chmin + chmax + estperf, d_noaut)
summary(mod2)
summary(mod1)
anova(mod2)
white.test(mod2, d_noaut) #-- White test (per dettagli ?bptest)
dwtest(mod2)
ols_coll_diag(mod2)
shapiro.test(resid(mod2))
ks.test(resid(mod2),"pnorm")
plot(mod2,which=1,pch=19)
par(mfrow=c(1,1))
plot(mod2,which=1,pch=19)
plot(mod2,which=2,pch=19)
plot(mod2,which=3,pch=19)
plot(mod2,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod2,which=5,pch=19)
hist(resid(mod2),col="lightblue",freq=F,xlab="Resid",main="")
lines(density(resid(mod1)),col=2,lwd=2)
# ETEROSCHEDASTICITA' 1a PARTE
mod3 <- lm(resid(mod2)^2 ~ syct + mmin+ cach + chmin + chmax + estperf, d_noaut) #-- stima modello lineare semplice
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
dwtest(mod3)
var(fitted(mod3))
sd(fitted(mod3))
sd_error <- sqrt(fitted(mod3))
sd_error <- sqrt(fitted(mod3))
mod4 <- lm( I(perf/sd_error) ~ 0 + I(1/sd_error) + I(syct/sd_error) + I(mmin/sd_error) + I(cach/sd_error)+ I(chmin/sd_error)+I(chmax/sd_error)+I(estperf/sd_error), d_noaut)
summary(mod4)
summary(mod4)
anova(mod4)
white.test(mod4, d_noaut)
dwtest(mod4)
weight <- 1/fitted(mod3)
mod5 <- lm(perf ~ syct + mmin+ cach + chmin + chmax + estperf, d_noaut[-which(weight<0),],weights = weight[-which(weight<0)])
mod5
summary(mod5)
anova(mod5)
white.test(mod5, d_noaut)
dwtest(mod5)
sd_error <- sqrt(fitted(mod3))
mod3 <- lm(log(resid(mod2)^2) ~ syct + mmin+ cach + chmin + chmax + estperf, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(perf/sd_error) ~ 0 + I(1/sd_error) + I(syct/sd_error) + I(mmin/sd_error) + I(cach/sd_error)+ I(chmin/sd_error)+I(chmax/sd_error)+I(estperf/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
plot(mod6,which=1,pch=19)
plot(mod6,which=2,pch=19)
plot(mod6,which=3,pch=19)
plot(mod6,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod6,which=5,pch=19)
