mod3 <- lm(log(resid(mod2)^2) ~ syct + mmin+ cach + chmin + chmax + estperf, d_noaut)
sd_error <- sqrt(exp(fitted(mod3)))
mod6 <- lm(I(perf/sd_error) ~ 0 + I(1/sd_error) + I(syct/sd_error) + I(mmin/sd_error) + I(cach/sd_error)+ I(chmin/sd_error)+I(chmax/sd_error)+I(estperf/sd_error), d_noaut)
summary(mod6)
anova(mod6)
white.test(mod6, d_noaut)
dwtest(mod6)
par(mfrow=c(1,1))
plot(mod6,which=1,pch=19)
plot(mod6,which=2,pch=19)
plot(mod6,which=3,pch=19)
plot(mod6,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod6,which=5,pch=19)
#################################
#   GLS
#################################
autocorr <- acf(resid(mod2),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:6,]
d1 <- d
d1 <- d_noaut
d1$resid <- resid(mod2)
d1$resid_l1 <- Lag(d1$resid,1)
d1$perf <- d1$perf-0.3245*Lag(d1$perf,1)
autocorr <- acf(resid(mod2),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:6,]
syct + mmin+ cach + chmin + chmax + estperf
d1 <- d_noaut
d1$resid <- resid(mod2)
d1$resid_l1 <- Lag(d1$resid,1)
d1$perf_t <- d1$perf-0.3245*Lag(d1$perf,1)
autocorr <- acf(resid(mod2),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:7,]
syct + mmin+ cach + chmin + chmax + estperf
d1 <- d_noaut
d1$resid <- resid(mod2)
d1$resid_l1 <- Lag(d1$resid,1)
d1$perf_t <- d1$perf-0.3245*Lag(d1$perf,1)
d1$syct_t <- d1$syct-0.3245*Lag(d1$Unemployed,1)
d1$mmin_t <- d1$mmin-0.3245*Lag(d1$mmin,1)
d1$cach_t <- d1$cach-0.3245*Lag(d1$cach,1)
d1$chmin_t <- d1$chmin-0.3245*Lag(d1$chmin,1)
d1$chmax_t <- d1$chmax-0.3245*Lag(d1$chmax,1)
d1$estper_t <- d1$estperf-0.3245*Lag(d1$estperf,1)
d1$int_tild <- 1-0.3245
#-- R CODE
mod2 <- lm(perf ~ 0 + syct + mmin+ cach + chmin + chmax + estperf, d_noaut)
summary(mod2)
anova(mod2)
#-- R CODE
white.test(mod2)
#-- R CODE
white.test(mod2, df)
dwtest(mod2)
#-- R CODE
mod2 <- lm(perf ~ 0 + syct + mmin+ cach + chmin + chmax + estperf, d1)
summary(mod2)
anova(mod2)
#-- R CODE
white.test(mod2, df)
dwtest(mod2)
#-- R CODE
mod2 <- lm(perf_t ~ 0+ int_tild + syct_t + mmin_t + cach_t + chmin_t + chmax_t + estperf_t, d1)
autocorr <- acf(resid(mod2),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:7,]
d1$resid_l1 <- Lag(d1$resid,1)
d1$perf_t <- d1$perf-0.3415*Lag(d1$perf,1)
d1$syct_t <- d1$syct-0.3415*Lag(d1$syct,1)
d1$mmin_t <- d1$mmin-0.3415*Lag(d1$mmin,1)
d1$cach_t <- d1$cach-0.3415*Lag(d1$cach,1)
d1$chmin_t <- d1$chmin-0.3415*Lag(d1$chmin,1)
d1$chmax_t <- d1$chmax-0.3415*Lag(d1$chmax,1)
d1$estper_t <- d1$estperf-0.3415*Lag(d1$estperf,1)
d1$int_tild <- 1-0.3415
#-- R CODE
mod2 <- lm(perf_t ~ 0 + int_tild + syct_t + mmin_t + cach_t + chmin_t + chmax_t + estperf_t, d1)
autocorr <- acf(resid(mod2),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:8,]
syct + mmin+ cach + chmin + chmax + estperf
d1 <- d_noaut
d1$resid <- resid(mod2)
d1$resid_l1 <- Lag(d1$resid,1)
d1$perf_t <- d1$perf-0.3415*Lag(d1$perf,1)
d1$syct_t <- d1$syct-0.3415*Lag(d1$syct,1)
d1$mmin_t <- d1$mmin-0.3415*Lag(d1$mmin,1)
d1$cach_t <- d1$cach-0.3415*Lag(d1$cach,1)
d1$chmin_t <- d1$chmin-0.3415*Lag(d1$chmin,1)
d1$chmax_t <- d1$chmax-0.3415*Lag(d1$chmax,1)
d1$estper_t <- d1$estperf-0.3415*Lag(d1$estperf,1)
d1$int_tild <- 1-0.3415
#-- R CODE
mod2 <- lm(perf_t ~ 0 + int_tild + syct_t + mmin_t + cach_t + chmin_t + chmax_t + estperf_t, d1)
#-- R CODE
mod2 <- lm(perf_t ~ 0 + int_tild + syct_t + mmin_t + cach_t + chmin_t + chmax_t + estper_t, d1)
summary(mod2)
anova(mod2)
#-- R CODE
white.test(mod2, df)
dwtest(mod2)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
library(olsrr)
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
df <- read.table(data_path, sep=";", header=TRUE)
data_path <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/2a_Esercitazione - Modelli Generalizzati/R 01 - Modelli Generalizzati/Esercizio 5/nazioni.csv"
df <- read.table(data_path, sep=";", header=TRUE)
head(df)
str(df)
df$pil <- as.numeric(gsub(",","",paste(df$pil)))
str(df)
#################################
#   STATISTICHE DESCRITTIVE
#################################
VAR_NUMERIC <- c("densita","urbana","vitafem","vitamas","alfabet","pil")
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(df[,i], main=i, col="lightgreen", freq=F, xlab=i)
}
#################################
#   REGRESSIONE
#################################
mod1 <- lm(pil ~ urbana + vitamas + vitafem + alfabet, df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
white.test(mod1, df)
dwtest(mod1)
plot(fitted(mod1),resid(mod1),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
text(fitted(mod1),resid(mod1),df$nazione,pos=1,cex=.6)
abline(h=0,lwd=2,lty=2,col=2)
par(mfrow=c(1,1))
plot(fitted(mod1),resid(mod1),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
text(fitted(mod1),resid(mod1),df$nazione,pos=1,cex=.6)
abline(h=0,lwd=2,lty=2,col=2)
#################################
#   OLS
#################################
mod2 <- lm(resid(mod1)^2 ~ urbana + vitamas + vitafem + alfabet, df) #-- stima modello lineare semplice
sd_error <- sqrt(fitted(mod2))
mod3 <- lm( I(pil/sd_error) ~ 0 + I(1/sd_error) + I(urbana/sd_error) + I(vitamas/sd_error) + I(vitafem/sd_error)+ I(alfabet/sd_error),df)
summary(mod3)
anova(mod3)
white.test(mod3, d_noaut)
white.test(mod3, df)
dwtest(mod3)
plot(fitted(mod3),resid(mod3),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
text(fitted(mod3),resid(mod3),df$nazione,pos=1,cex=.6)
abline(h=0,lwd=2,lty=2,col=2)
mod4 <- lm(log(resid(mod1)^2) ~ urbana + vitamas + vitafem + alfabet, df)
sd_error <- sqrt(exp(fitted(mod4)))
mod5 <- lm( I(pil/sd_error) ~ 0 + I(1/sd_error) + I(urbana/sd_error) + I(vitamas/sd_error) + I(vitafem/sd_error)+ I(alfabet/sd_error), df)
summary(mod5)
anova(mod5)
white.test(mod5, d_noaut)
white.test(mod5, df)
dwtest(mod5)
plot(fitted(mod5),resid(mod5),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
text(fitted(mod5),resid(mod5),df$nazione,pos=1,cex=.6)
abline(h=0,lwd=2,lty=2,col=2)
weight <- 1/fitted(mod2)
mod5 <- lm(pil ~ urbana + vitamas + vitafem + alfabet, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod5)
anova(mod5)
weight <- 1/fitted(mod2)
mod7 <- lm(pil ~ urbana + vitamas + vitafem + alfabet, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod7)
mod4 <- lm(log(resid(mod1)^2) ~ urbana + vitamas + vitafem + alfabet, df)
sd_error <- sqrt(exp(fitted(mod4)))
mod5 <- lm( I(pil/sd_error) ~ 0 + I(1/sd_error) + I(urbana/sd_error) + I(vitamas/sd_error) + I(vitafem/sd_error)+ I(alfabet/sd_error), df)
summary(mod5)
anova(mod5)
white.test(mod5, df)
dwtest(mod5)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
library(olsrr)
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
data_path <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/1a_Esercitazione - Modello Lineare/R/Esercizio 7/colleges.csv"
df <- read.table(data_path, header=TRUE, sep=";")
str(df)
VAR_NUMERIC <- names(df)[2:ncol(df)]
#################################
#   STATISTICHE DESCRITTIVE
#################################
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
plot(df[,VAR_NUMERIC], cex=0.5, pch=17)
par(mfrow=c(3,3))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,5))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,5))
for(i in VAR_NUMERIC){
hist(df[,i], main=i, col="lightgreen", freq=F, xlab=i)
}
#################################
#   REGRESSIONE
#################################
mod1 <- lm(ppl_acc ~ ave_MAT + appl_ric + p_stud10, df) #-- stima modello lineare semplice
#################################
#   REGRESSIONE
#################################
mod1 <- lm(appl_acc ~ ave_MAT + appl_ric + p_stud10, df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
white.test(mod1, df)
dwtest(mod1)
plot(fitted(mod1),resid(mod1),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
par(mfrow=c(1,1))
plot(fitted(mod1),resid(mod1),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
ols_coll_diag(mod1)
mod2 <- lm(resid(mod1)^2 ~ ave_MAT + appl_ric + p_stud10, df) #-- stima modello lineare semplice
sd_error <- sqrt(fitted(mod2))
mod4 <- lm(log(resid(mod1)^2) ~ ave_MAT + appl_ric + p_stud10, df)
sd_error <- sqrt(exp(fitted(mod4)))
mod5 <- lm( I(appl_acc/sd_error) ~ 0 + I(1/sd_error) + I(ave_MAT/sd_error) + I(appl_ric/sd_error) + I(p_stud10/sd_error),df)
summary(mod5)
anova(mod5)
white.test(mod5, df)
dwtest(mod5)
plot(fitted(mod5),resid(mod5),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
plot(mod5,which=1,pch=19)
plot(mod5,which=2,pch=19)
plot(mod5,which=3,pch=19)
plot(mod5,which=4,pch=19)
abline(h=2*4/nrow(d),col=2,lwd=3,lty=2)
plot(mod5,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod5,which=5,pch=19)
df[272,]
df[272,VAR_NUMERIC]
weight <- 1/fitted(mod2)
mod7 <- lm(appl_acc ~ ave_MAT + appl_ric + p_stud10, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod7)
anova(mod7)
white.test(mod7, df)
dwtest(mod7)
plot(fitted(mod7),resid(mod7),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
autocorr <- acf(resid(mod1),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:5,]
#-- metodo alternativo per ottenere il corff. di autocorrelazione
cor(resid(mod1),c(NA,resid(mod1)[1:(length(resid(mod1))-1)]),use="pairwise.complete.obs")
d1 <- data.frame(
mod1$model,
resid=resid(mod1),
resid_l1=c(NA,resid(mod1)[1:(length(resid(mod1))-1)]) #-- residui ritardati
)
mod2 <- lm(resid ~ resid_l1,d1)
summary(mod2)
anova(mod2)
#-- R CODE
white.test(mod2)
#-- R CODE
white.test(mod2, df)
dwtest(mod2)
d <- read.table(ABSOLUTE_PATH,header=TRUE,sep=";")
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- c("year","tfr","partic","degrees","fconvict","ftheft","mconvict","mtheft")
#-- print delle prime 6 righe del dataset
head(d)
str(d)
#-- import dei dati
ABSOLUTE_PATH <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/2a_Esercitazione - Modelli Generalizzati/R 01 - Modelli Generalizzati/Esercizio 3/Hartnagel.csv"
d <- read.table(ABSOLUTE_PATH,header=TRUE,sep=";")
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- c("year","tfr","partic","degrees","fconvict","ftheft","mconvict","mtheft")
#-- print delle prime 6 righe del dataset
head(d)
str(d)
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
plot(d[,VAR_NUMERIC],pch=19,cex=.5) #-- scatter plot multivariato
par(mfrow=c(3,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
#-- R CODE
mod1 <- lm(ftheft ~ partic + degrees + mtheft, d) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
par(mfrow=c(1,1))
#-- R CODE
white.test(mod1)
dwtest(mod1) #-- Durbin-Whatson test
#-- R CODE
plot(mod1,which=1,pch=19)
plot(mod1,which=2,pch=19)
plot(mod1,which=3,pch=19)
plot(mod1,which=4,pch=19)
abline(h=2*3/nrow(d),col=2,lwd=3,lty=2)
plot(mod1,which=5,pch=19)
#-- R CODE
index <- as.numeric(row.names(mod1$model))
plot(d$year[index],resid(mod1),pch=19,xlab="Year",ylab="Residuo",type="l",col=1,lwd=2)
text(d$year[index],resid(mod1),d$year[index],pos=1,cex=.6)
#-- R CODE
autocorr <- acf(resid(mod1),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:5,]
#-- metodo alternativo per ottenere il corff. di autocorrelazione
cor(resid(mod1),c(NA,resid(mod1)[1:(length(resid(mod1))-1)]),use="pairwise.complete.obs")
d1 <- data.frame(
mod1$model,
resid=resid(mod1),
resid_l1=c(NA,resid(mod1)[1:(length(resid(mod1))-1)]) #-- residui ritardati
)
mod2 <- lm(resid ~ resid_l1,d1)
summary(mod2)
anova(mod2)
#-- R CODE
white.test(mod2)
dwtest(mod2)
#-- R CODE
d1 <- data.frame(
mod1$model,
resid=resid(mod1)
)
mod2 <- lm(resid ~ resid_l1,d1)
summary(mod2)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
library(olsrr)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(lmtest)
library(olsrr)
white.test <- function(lmod,data){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
data_path <- "/Volumes/HDD_Ale/Statistical Modelling/Esercitazioni/1a_Esercitazione - Modello Lineare/R/Esercizio 7/colleges.csv"
df <- read.table(data_path, header=TRUE, sep=";")
str(df)
VAR_NUMERIC <- names(df)[2:ncol(df)]
#################################
#   STATISTICHE DESCRITTIVE
#################################
summary(df[,VAR_NUMERIC])
cor(df[,VAR_NUMERIC])
plot(df[,VAR_NUMERIC], cex=0.5, pch=17)
par(mfrow=c(2,5))
for(i in VAR_NUMERIC){
boxplot(df[,i], main=i, col="lightgreen")
}
par(mfrow=c(2,5))
for(i in VAR_NUMERIC){
hist(df[,i], main=i, col="lightgreen", freq=F, xlab=i)
}
#################################
#   REGRESSIONE
#################################
mod1 <- lm(appl_acc ~ ave_MAT + appl_ric + p_stud10, df) #-- stima modello lineare semplice
summary(mod1)
anova(mod1)
par(mfrow=c(1,1))
white.test(mod1, df)
dwtest(mod1)
plot(fitted(mod1),resid(mod1),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
ols_coll_diag(mod1)
mod2 <- lm(resid(mod1)^2 ~ ave_MAT + appl_ric + p_stud10, df) #-- stima modello lineare semplice
sd_error <- sqrt(fitted(mod2))
pil ~ urbana + vitamas + vitafem + alfabet
mod3 <- lm( I(pil/sd_error) ~ 0 + I(1/sd_error) + I(urbana/sd_error) + I(vitamas/sd_error) + I(vitafem/sd_error)+ I(alfabet/sd_error),df)
summary(mod3)
anova(mod3)
white.test(mod3, df)
dwtest(mod3)
plot(fitted(mod3),resid(mod3),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
text(fitted(mod3),resid(mod3),df$nazione,pos=1,cex=.6)
abline(h=0,lwd=2,lty=2,col=2)
mod4 <- lm(log(resid(mod1)^2) ~ ave_MAT + appl_ric + p_stud10, df)
sd_error <- sqrt(exp(fitted(mod4)))
appl_acc ~ ave_MAT + appl_ric + p_stud10
mod5 <- lm( I(appl_acc/sd_error) ~ 0 + I(1/sd_error) + I(ave_MAT/sd_error) + I(appl_ric/sd_error) + I(p_stud10/sd_error),df)
summary(mod5)
anova(mod5)
white.test(mod5, df)
dwtest(mod5)
plot(fitted(mod5),resid(mod5),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
plot(mod5,which=1,pch=19)
plot(mod5,which=2,pch=19)
plot(mod5,which=3,pch=19)
plot(mod5,which=4,pch=19)
abline(h=2*4/nrow(df),col=2,lwd=3,lty=2)
plot(mod5,which=5,pch=19)
df[272,]
par(mfrow=c(2,2))
plot(df$ave_MAT,resid(mod1),pch=19,xlab="ave_MAT",ylab="Residual")
abline(h=0,lwd=3,lty=2,col=2)
plot(d$appl_ric,resid(mod1),pch=19,xlab="appl_ric",ylab="Residual")
abline(h=0,lwd=3,lty=2,col=2)
plot(d$p_stud10,resid(mod1),pch=19,xlab="p_stud10",ylab="Residual")
abline(h=0,lwd=3,lty=2,col=2)
plot(1:nrow(d),rstudent(mod1),pch=19,xlab="Observation Index",ylab="Residual Studentized",type="h")
abline(h=2,lwd=3,lty=2,col=2)
abline(h=-2,lwd=3,lty=2,col=2)
weight <- 1/fitted(mod2)
mod7 <- lm(appl_acc ~ ave_MAT + appl_ric + p_stud10, df[-which(weight<0),],weights = weight[-which(weight<0)])
summary(mod7)
anova(mod7)
white.test(mod7, df)
dwtest(mod7)
plot(fitted(mod7),resid(mod7),pch=19,xlab="Predicted",ylab="Residuo",type="p",col=1,lwd=2)
abline(h=0,lwd=2,lty=2,col=2)
autocorr <- acf(resid(mod1),main="Autocorrelazion",lwd=2)
data.frame(LAG=autocorr$lag,VALUE=autocorr$acf)[1:5,]
#-- metodo alternativo per ottenere il corff. di autocorrelazione
cor(resid(mod1),c(NA,resid(mod1)[1:(length(resid(mod1))-1)]),use="pairwise.complete.obs")
d1 <- data.frame(
mod1$model,
resid=resid(mod1),
resid_l1=c(NA,resid(mod1)[1:(length(resid(mod1))-1)]) #-- residui ritardati
)
mod2 <- lm(resid ~ resid_l1,d1)
summary(mod2)
anova(mod2)
dwtest(mod2)
#-- R CODE
d1 <- data.frame(
mod1$model,
resid=resid(mod1)
)
d1$appl_acc_l1 <- Lag(d1$appl_acc,1)
d1$ave_MAT_l1 <- Lag(d1$ave_MAT,1)
d1$appl_ric_l1 <- Lag(d1$appl_ric,1)
d1$p_stud10_l1 <- Lag(d1$p_stud10,1)
d1$resid_l1 <- Lag(d1$resid,1)
d1$int_tild <- 1-0.154
d1$appl_acc_t <- d1$appl_acc-0.154*d1$appl_acc_l1
d1$ave_MAT_t <- d1$ave_MAT-0.154*d1$ave_MAT_l1
d1$appl_ric_t <- d1$appl_ric-0.154*d1$appl_ric_l1
d1$p_stud10_t <- d1$p_stud10-0.154*d1$p_stud10_l1
d1$resid_t <- d1$resid-0.154*d1$resid_l1
modx <- lm(appl_acc_t ~ 0 + int_tild + ave_MAT_t + appl_ric_t + p_stud10_t ,d1)
summary(modx)
anova(modx)
#-- R CODE
white.test(modx)
#-- R CODE
white.test(modx, d1)
dwtest(modx)
# ARIMA 1
mod4 <- arima(d1$appl_acc, order=c(1,0,0), xreg = d1[,c("ave_MAT","appl_ric","p_stud10")],method="ML")
mod4
coeftest(mod4)
durbinWatsonTest(as.numeric(mod4$residuals))
# ARIMA 2
mod5 <- arima(d1$appl_acc, order=c(2,0,0), xreg = d1[,c("ave_MAT","appl_ric","p_stud10")],method="ML")
mod5
coeftest(mod5)
durbinWatsonTest(as.numeric(mod4$residuals), max.lag = 2)
durbinWatsonTest(as.numeric(mod4$residuals))
durbinWatsonTest(as.numeric(mod4$residuals), max.lag = 2)
