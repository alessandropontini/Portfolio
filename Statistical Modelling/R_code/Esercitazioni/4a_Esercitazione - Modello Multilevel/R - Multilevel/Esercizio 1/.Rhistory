hist(d[,i],main=i,col="lightblue",xlab=i,freq=F)
}
# REGRESSIONE MULTILEVEL: Empty Model
# Il primo modello proposto è l’empty model.
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
install.packages("car")
install.packages("sjstats")
install.packages("plotrix")
install.packages("sjPlot")
install.packages("sjmisc")
install.packages("lme4")
install.packages("pander")
install.packages("car")
install.packages("olsrr")
install.packages("systemfit")
install.packages("het.test")
install.packages("ppcor")
install.packages('TMB', type = 'source')
install.packages('snakecase', type = 'source')
#-- R CODE
library(car)
library(sjstats)
library(plotrix)
library(sjPlot)
library(sjmisc)
library(lme4)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(ppcor)
library(snakecase)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data=d){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
#-- import dei dati
ABSOLUTE_PATH <- "C:\\Users\\daniele.riggi\\Desktop\\Corso Bicocca Vittadini\\07_Esercitazioni Vitta\\4a_Esercitazione - Modello Multilevel\\R - Multilevel\\Esercizio 1"
d <- read.csv(paste0(ABSOLUTE_PATH,"\\CASchools.txt"),sep=" ")
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- names(d)[6:ncol(d)]
#-- print delle prime 6 righe del dataset
head(d)
# STATISTICHE DESCRITTIVE
# Si propongono la matrice di correlazione tra le variabili e alcune descrittive di base.
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
plot(d[,VAR_NUMERIC],pch=19,cex=.5) #-- scatter plot multivariato
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(d[,i],main=i,col="lightblue",xlab=i,freq=F)
}
# REGRESSIONE MULTILEVEL: Empty Model
# Il primo modello proposto è l’empty model.
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
# "Pooled" (days ~ reaction, without groups) scatterplot and linear model
gg <- ggplot(d, aes(x = county, y = math)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) +
theme_bw() +
scale_x_continuous(breaks = 0:9)
print(gg)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
# "Pooled" (days ~ reaction, without groups) scatterplot and linear model
gg <- ggplot(d, aes(x = county, y = math)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point(alpha = 0.3, size = 3) +
theme_bw() +
scale_x_continuous(breaks = 0:9)
print(gg)
gg <- ggplot(d, aes(x = county, y = math))
print(gg)
gg <- ggplot(d, aes(x = county, y = math))
+geom_smooth(method = "lm", se = FALSE)
gg <- ggplot(d, aes(x = county, y = math)) +
geom_smooth(method = "lm", se = FALSE)
print(gg)
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
install.packages("car")
install.packages("sjstats")
install.packages("plotrix")
install.packages("sjPlot")
install.packages("sjmisc")
install.packages("lme4")
install.packages("pander")
install.packages("car")
install.packages("olsrr")
install.packages("systemfit")
install.packages("het.test")
install.packages("ppcor")
install.packages('TMB', type = 'source')
install.packages('snakecase', type = 'source')
#-- R CODE
library(car)
library(sjstats)
library(plotrix)
library(sjPlot)
library(sjmisc)
library(lme4)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(ppcor)
library(snakecase)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data=d){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
#-- import dei dati
ABSOLUTE_PATH <- "C:\\Users\\daniele.riggi\\Desktop\\Corso Bicocca Vittadini\\07_Esercitazioni Vitta\\4a_Esercitazione - Modello Multilevel\\R - Multilevel\\Esercizio 1"
d <- read.csv(paste0(ABSOLUTE_PATH,"\\CASchools.txt"),sep=" ")
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- names(d)[6:ncol(d)]
#-- print delle prime 6 righe del dataset
head(d)
# STATISTICHE DESCRITTIVE
# Si propongono la matrice di correlazione tra le variabili e alcune descrittive di base.
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
plot(d[,VAR_NUMERIC],pch=19,cex=.5) #-- scatter plot multivariato
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(d[,i],main=i,col="lightblue",xlab=i,freq=F)
}
# REGRESSIONE MULTILEVEL: Empty Model
# Il primo modello proposto è l’empty model.
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
# In questo caso come è noto non esistono variabili esplicative e si vede che il coefficiente interclasse è rilevante
# e pari a 0.273. Il test di verosimiglianza respinge l’ipotesi che il modello non interpreti la variabile dipendente.
# Si propongono poi gli intervalli di confidenza dei parametri casuali inerenti i distretti e quindi la relativa
# rappresentazione grafica.
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
install.packages("lme4")
install.packages("lme4")
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
install.packages("lme4")
install.packages("lme4")
install.packages("lme4")
install.packages("lme4")
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
?Anova
library(car)
?Anova
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
library(sjstats)
library(plotrix)
library(sjPlot)
library(sjmisc)
library(lme4)
library(pander)
library(car)
library(olsrr)
library(systemfit)
library(het.test)
library(ppcor)
library(snakecase)
panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data=d){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
#-- import dei dati
ABSOLUTE_PATH <- "C:\\Users\\daniele.riggi\\Desktop\\Corso Bicocca Vittadini\\07_Esercitazioni Vitta\\4a_Esercitazione - Modello Multilevel\\R - Multilevel\\Esercizio 1"
d <- read.csv(paste0(ABSOLUTE_PATH,"\\CASchools.txt"),sep=" ")
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- names(d)[6:ncol(d)]
#-- print delle prime 6 righe del dataset
head(d)
# STATISTICHE DESCRITTIVE
# Si propongono la matrice di correlazione tra le variabili e alcune descrittive di base.
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
plot(d[,VAR_NUMERIC],pch=19,cex=.5) #-- scatter plot multivariato
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(d[,i],main=i,col="lightblue",xlab=i,freq=F)
}
# REGRESSIONE MULTILEVEL: Empty Model
# Il primo modello proposto è l’empty model.
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
par(mfrow=c(1,1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
#-- R CODE
mod1 <- lmer(math ~ calworks + read + calworks*read + (1| county),d,REML=F) #-- empty model
summary(mod1)
Anova(mod1, type="III")
5.686 / (5.686  + 42.471)
data.frame("ICC"=icc(mod1)) #-- ICC
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
#-- R CODE
#-- R CODE
mod1 <- lmer(math ~ 1 + (1 | county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d) #-- modello nullo
anova(mod1,mod1_null) #-- test del rapporto di verosimiglianza
data.frame("ICC"=icc(mod1))
summary(mod1)
95.96 / (95.96  + 255.95 )
Anova(mod1, type="III")
653.696 + 1.96*(95.96)^1/2
653.696 - 1.96*(95.96)^1/2
#-- R CODE
par(mfrow=c(1,1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
#-- R CODE
mod1 <- lmer(math ~ calworks + read + calworks*read + (1| county),d,REML=F) #-- empty model
summary(mod1)
Anova(mod1, type="III")
data.frame("ICC"=icc(mod1)) #-- ICC
# REGRESSIONE MULTILEVEL: Random Slope
mod1 <- lmer(math ~ calworks + read + calworks*read + (calworks| county),d,REML=T) #-- empty model
summary(mod1)
Anova(mod1, type="III")
data.frame("ICC"=icc(mod1)) #-- ICC
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_coef = res[[1]]$data[order(res[[1]]$data$estimate),]
data_int  = res[[2]]$data[order(res[[2]]$data$estimate),]
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="Country",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="Country",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
#-- import dei dati
ABSOLUTE_PATH <- "C:\\Users\\daniele.riggi\\Desktop\\Corso Bicocca Vittadini\\07_Esercitazioni Vitta\\4a_Esercitazione - Modello Multilevel\\R - Multilevel\\Esercizio 2"
d <- read.csv(paste0(ABSOLUTE_PATH,"\\imm10.csv"),sep=";")
#-- Fisso la decima scuola come riferimento
d$schnum <- factor(d$schnum)
contrasts(d$schnum) <- contr.treatment(levels(d$schnum),base=which(levels(d$schnum) == '10'))
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- c("homework","percmin","math","meanses")
#-- print delle prime 6 righe del dataset
head(d)
# STATISTICHE DESCRITTIVE
# Si propongono la matrice di correlazione tra le variabili e alcune descrittive di base.
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
plot(d[,VAR_NUMERIC],pch=19,cex=.5) #-- scatter plot multivariato
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
hist(d[,i],main=i,col="lightblue",xlab=i,freq=F)
}
# Proponiamo ora il box plot per la variabile “math” che sarà la variabile dipendente nel modello Multilevel
#-- R CODE
par(mfrow=c(1,1))
boxplot(d$math~d$schid,main="Math by school",col="lightblue",ylab="math")
# ANALISI DELLA VARIANZA (EFFETTI FISSI)
# Si consideri ora innanzitutto una analisi della varianza a effetti fissi.
#-- R CODE
mod1 <- lm(math ~ schnum,d)
summary(mod1)
anova(mod1)
# Viene respinta l’ipotesi che le medie dei gruppi siano tutte uguali. Analizzandole e avendo come riferimento
# la media del gruppo 10 si osserva ad esempio che la scuola 7 ha un punteggio in math di 14.97 punti più
# elevato rispetto alla scuola 10 stessa, mentre la scuola 2 avrà un punteggio inferiore in media di 5.7. Si passa
# ora al modello empty.
# REGRESSIONE MULTILEVEL: Empty Model
#-- R CODE
mod1 <- lmer(math ~ (1| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
mod1_null <- lm(math ~ 1,d)
anova(mod1,mod1_null)
data.frame("ICC"=icc(mod1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
# E’ respinta l’ipotesi che il modello non interpreti i dati e dal rapporto tra varianza spiegata e totale si ricava
# un coefficiente intraclasse pari a 0.32 che è elevato, e segnala una buona variabilità fra le scuole nei punteggi
# di matematica. Si propongono poi i valori attesi e gli intervalli di confidenza dei parametri casuali inerenti le
# singole scuole. Per i parametri casuali il modello postula graduatorie basate su valori attesi e intervalli di
# confidenza.
# Come è noto una scuola A può ritenersi superiore a una scuola B in termini di efficacia solo se l’estremo
# inferiore dell’intervallo di confidenza di A sia superiore all’estremo superiore dell’intervallo di confidenza di B.
# Si può notare che 6 scuole su 10 hanno un andamento peggiore rispetto a quello della media generale. Si può
# verificare che solo l’effetto casuale del gruppo 10 è significativo. Si passa poi a proporre il modello random
# intercept introducendo prima la variabile esplicativa “homework”.
# REGRESSIONE MULTILEVEL: Random Intercept
#-- R CODE
mod1 <- lmer(math ~ homework + (1| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
data.frame("ICC"=icc(mod1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
# Il coefficiente di correlazione intraclasse si abbassa di pochissimo (0.28) in quanto si abbassano in uguale
# proporzione varianza spiegata e residua. Il modello interpreta bene i dati e la variabile “homework” risulta
# altresi significativa. Anche il test di 3° tipo degli effetti fissi conferma questa significatività.
# Si propongono i valori attesi e gli intervalli di confidenza dei parametri casuali inerenti i gruppi. Si vede come
# il ranking muti in modo rilevante al caso empty. Ciò mostra che la diversa distribuzione fra le scuole della
# variabile “homework” è all’origine di parte della variabilità di “math” attribuito in prima istanza nel modello
# empty alla efficacia delle scuole.
# Tenere conto di questo non solo modifica l’efficacia complessiva delle scuole ma anche l’efficacia relativa di
# ogni scuola rispetto ad altre. Si può verificare che solo l’effetto casuale del gruppo 7 è significativo e anche in
# questo caso quindi la situazione cambia radicalmente rispetto al modello empty.
# Si aggiunge ora nel modello mixed anche la variabile esplicativa “ses”.
#-- R CODE
mod1 <- lmer(math ~ homework + ses + (1| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
data.frame("ICC"=icc(mod1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
# REGRESSIONE MULTILEVEL: Random Slope
#-- R CODE
mod1 <- lmer(math ~ homework + ses + (homework| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_coef = res[[1]]$data[order(res[[1]]$data$estimate),]
data_int  = res[[2]]$data[order(res[[2]]$data$estimate),]
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="School",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
res
data_coef
data_int
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="School",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
Anova(mod1, type="III")
summary(mod1)
mod1
#-- R CODE
mod1 <- lmer(math ~ homework + ses + ratio + (homework| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
res
Anova(mod1, type="I")
Anova(mod1, type="3")
data_int
#-- R CODE
mod1 <- lmer(math ~ homework + ses + (homework| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_coef = res[[1]]$data[order(res[[1]]$data$estimate),]
data_int  = res[[2]]$data[order(res[[2]]$data$estimate),]
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="School",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
data_coef
data_int
#-- R CODE
mod1 <- lmer(math ~ homework + ses + (1| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
data.frame("ICC"=icc(mod1))
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_1 =res$data[order(res$data$estimate),]
plotCI(1:nrow(data_1),data_1$estimate,ui=data_1$conf.high, li=data_1$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_1$estimate),col=2,lwd=3,lty=2)
data_1
#-- R CODE
mod1 <- lmer(math ~ homework + ses + (homework| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
#-- R CODE
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_coef = res[[1]]$data[order(res[[1]]$data$estimate),]
data_int  = res[[2]]$data[order(res[[2]]$data$estimate),]
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="School",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
data_coef
data_int
#-- R CODE
mod1 <- lmer(math ~ homework + ses + ratio + (homework| schnum),d,REML=T)
summary(mod1)
Anova(mod1, type="III")
res <- plot_model(mod1, type = "re", grid = FALSE, show.values=T,title="T",prnt.plot=F, sort.est ="sort.all" )
data_coef = res[[1]]$data[order(res[[1]]$data$estimate),]
data_int  = res[[2]]$data[order(res[[2]]$data$estimate),]
plotCI(1:nrow(data_coef),data_coef$estimate,ui=data_coef$conf.high, li=data_coef$conf.low ,pch=19,scol="blue",xlab="School",ylab="Estimate")
abline(h=mean(data_coef$estimate),col=2,lwd=3,lty=2)
plotCI(1:nrow(data_int),data_int$estimate,ui=data_int$conf.high, li=data_int$conf.low ,pch=19,scol="red",xlab="School",ylab="Estimate")
abline(h=mean(data_int$estimate),col=2,lwd=3,lty=2)
data_coef
data_int
